#parse("/velocity/layout.vm")
#@mainLayout()
<div class="container page-container">
	<div class="row">
		<div class="col s12 tabs-container">
			<ul class="tabs">
				<li class="tab col s6"><a class="active" href="#editor">Editor</a></li>
    			<li class="tab col s6"><a href="#source">Source</a></li>
    			<li class="tab col s6"><a href="#metadata">Metadata</a></li>
  			</ul>
		</div>
		<div id="editor" class="col s12">
			<div id="mapping-body">
			</div>
			<div id="mapping-footer">
				<a id="addStatementBtn" class="btn-floating btn-small grey" href="#">
			      <i class="material-icons">add</i>
			    </a>
			</div>
		</div>
		<div id="source" class="col s12">
			<form id="mappingSourceEditForm" class="col s12">
				<textarea name="source-content" class="materialize-textarea">$mapping.getContent()</textarea>
			</form>
		</div>
		<div id="metadata" class="col s12">
			<form id="mappingMetadataEditForm" class="col s12">
				<div class="row">
					<div class="input-field col s12">
						<input name="name" value="$mapping.getName()" type="text" class="validate" required>
						<label for="name">Name</label>
				  	</div>
				</div>
				<div class="row">
					<div class="input-field col s12">
						<input disabled value="$mapping.getAuthor()" type="text" class="validate">
						<input type="hidden" name="author" value="$mapping.getAuthor()">
						<label for="author">Author</label>
				  	</div>
				</div>
				<div class="row">
					<div class="input-field col s12">
						<input name="uri" value="$mapping.getUri()" type="text" class="validate" required>
						<label for="uri">Name</label>
				  	</div>
				</div>
			</form>
		</div>
    </div>
</div>
#end
<script type="text/javascript">
	$('select').material_select();
	$('#addStatementBtn').click(addStatement);
	var mapping = $mappingJson;
	loadMapping(mapping);
	function loadMapping(mapping) {
		var triples = mapping.content;
		var previousVal = "";
		for(i in triples) {
			color = "";
			var subjectVal = triples[i].s.val;
			if(typeof triples[i].s.sem_class != "undefined") {
				subjectVal = triples[i].s.sem_class; 
				color = "black white-text";
			}
			if(subjectVal==previousVal) {
				var subject = $('<div>',{"class":"col s4 scol"}).append($('<div>',{"class":"chip hidden "+color}).html(subjectVal));
			}
			else {
				var subject = $('<div>',{"class":"col s4 scol"}).append($('<div>',{"class":"chip "+color}).html(subjectVal));
			}
			previousVal = subjectVal;
			var predicate = $('<div>',{"class":"col s4 pcol"}).append("&#8594;").append($('<div>',{"class":"chip white"}).html(triples[i].p.val)).append("&#8594;");
			var objVal = triples[i].o.val;
			color = "grey";
			var icon = "";
			if(typeof triples[i].o.sem_class != "undefined") {
				objVal = triples[i].o.sem_class;
				color = "black white-text"; 
			}
			if(triples[i].o.type == "binding") {
				color = "grey darken-1";
				icon = "<i class='chip-icon material-icons'>view_module</i>";
			}
			var object = $('<div>',{"class":"col s4 ocol"}).append($('<div>',{"class":"chip "+color+" white-text"}).html(objVal+icon));
			var row = $('<div>',{"class":"row"}).append(subject).append(predicate).append(object);
			$('#mapping-body').append(row);
		}
	}
	function addStatement() {
		var stRow = $('<div>',{class:"row"});
		var sCard = $('<div>',{class:"row"}).append($("<div>", {class:"col s12"}).append(createCard("s")));
		var pCard = $('<div>',{class:"row"}).append($("<div>", {class:"col s12"}).append(createCard("p")));
		var oCard = $('<div>',{class:"row"}).append($("<div>", {class:"col s12"}).append(createCard("o")));
		stRow.append($("<div>", {class:"col s4 scol"}).append(sCard));
		stRow.append($("<div>", {class:"col s4 pcol"}).append(pCard));
		stRow.append($("<div>", {class:"col s4 ocol"}).append(oCard));
		$('#mapping-body').append(stRow);
		initialiseAutocomplete();
		$('select').material_select();
	}
	function initialiseAutocomplete() {
		var predicates = JSON.parse(JSON.stringify(mapping.predicates)); //clone object
		for(i in predicates) { //prepare predicates
			predicates[i] = null;
		}
		$('input.p-uri-autocomplete').autocomplete({
		  data: predicates
		});
	}
	function createCard(cardType) {
		var cardContent = $('<div>',{class:"card-content"});
		var doneBtn = $('<a>',{href:"#"+cardType}).html('Done');
		if(cardType=="p") {
			cardContent.append(createUriBox("p-uri-autocomplete"));
		} else {
			cardContent.append(createSelection(cardType));
			cardContent.append(createUriBox("uri"));
		}
		doneBtn.click(doneClick);
		var cardAction = $('<div>',{class:"card-action close"}).append(doneBtn);
		var card = $('<div>',{class:"card"}).append(cardContent).append(cardAction);
		return card;
	}
	function doneClick() {
		var cardType = $(this).attr('href').slice(1); //remove #
		var col = $(this).parent().parent().parent().parent().parent();
		var autocomplete = col.find('.autocomplete');
		var value = autocomplete.val();
		var sel = col.find('select').val();
		if(value!="") {
			col.html('');
			if(cardType=="p") {
				var chip = $('<div>',{"class":"chip white"}).html(value).data('raw',mapping.predicates[value]);
				col.append("&#8594;").append(chip).append("&#8594;");
			} else {
				if(sel=="uri") {
					var chip = $('<div>',{"class":"chip grey white-text"}).html(value);
					col.append(chip);
				}				
			}
		}
	}
	function createSelection(cardType) {
		var select = $('<select>',{class:cardType+"-select"}).append('<option value="" disabled>Choose a Node Type</option>');
		select.append('<option value="bnode_class">Blank Node with Class</option>');
		select.append('<option value="bnode_exist">Existing Blank Node</option>');
		select.append('<option value="uri" selected>URI</option>');
		if(cardType=="o") {
			select.append('<option value="literal">Literal</option>');
			select.append('<option value="binding">Binding</option>');
		}
		return $('<div>',{class:"row"}).append($('<div>',{class:"input-field col s12"}).append(select));
	}
	function createUriBox(class_name) {
		var box = $('<input>',{class:"autocomplete "+class_name,type:"text",placeholder:"URI or Prefix & URI"});
		return $('<div>',{class:"row"}).append($('<div>',{class:"input-field col s12"}).append(box));
	}
</script>